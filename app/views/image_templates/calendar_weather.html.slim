.abs #{view_object[:timestamp]} - #{view_object[:battery_level]}
.fade-bottom
- if view_object[:error_messages].any?
  .error-messages
    i.fa.fa-fw.fa-warning
    - view_object[:error_messages].each do |error_message|
      .error-message = error_message
.calendar-weather
  .temp-graph
    table
      - min = view_object[:weather][:hour_temps].min { |a, b| a[1] <=> b[1] }
      tr.graph
        - i = 0
        - view_object[:weather][:hour_temps].each do |label, temp, icon|
          td
            - klass = i % 3 == 0 ? "bigger" : ""
            .point class="#{klass}" style="margin-bottom: #{((temp - min[1]) * 3).round}px"
              - if i % 3 == 0
                .temp
                  = temp
                  | Â°
            - if i % 3 == 0
              .relative
                .icon = File.read(File.join(Rails.root, "app", "assets", "images", icon)).to_s.html_safe
                .time = label.gsub(":00", "").downcase.gsub("m", "")
          - i +=1
  ul.calendar
    - [view_object[:today_events], view_object[:tomorrow_events]].each_with_index do |event_day, index|
      - if index == 0
        li.date-divider Today
        li.weather-summary = view_object[:weather][:summary]
      - if index == 1
        li.date-divider Tomorrow
      li.calendar-day
        ul
          - [event_day[:all_day], event_day[:periodic]].flatten.each do |event|
            li.calendar-event
              i.fa.fa-fw class="fa-#{event['icon']}"
              p #{event["summary"]}
              - if !event["all_day"] || event["location"].present?
                p.time
                  - unless event["all_day"]
                    = event["time"]
                  - if !event["all_day"] && event["location"].present?
                    ' ,
                  - unless event["location"].nil?
                    = event["location"].to_s.split(",")[0]

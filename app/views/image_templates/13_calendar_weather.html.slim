style
  = File.read(Rails.root.join("app", "assets", "image_templates", "font-awesome.css")).html_safe
  = File.read(Rails.root.join("app", "assets", "image_templates", "weathericons.css")).html_safe
  = File.read(Rails.root.join("app", "assets", "image_templates", "fonts.css")).html_safe
  = File.read(Rails.root.join("app", "assets", "image_templates", "styles.css")).html_safe
  = File.read(Rails.root.join("app", "assets", "image_templates", "13_vertical_calendar_weather.css")).html_safe
.abs #{view_object[:timestamp]} - #{view_object[:battery_level]}
- if view_object[:error_messages].any?
  .error-messages
    i.fa.fa-fw.fa-warning
    - view_object[:error_messages].each do |error_message|
      .error-message = error_message
.thirteen-horizontal
  .fade-bottom
  .sidebar
    .current-temp = view_object[:weather][:current_temperature]
    .summary = view_object[:day_groups][0][:weather_summary]
    .yearly-events-table
      h3 Coming Up
      table
        - view_object[:yearly_events].each do |month_int, events|
          tr
            td.yearly-events-month colspan="2" = Date::MONTHNAMES[month_int]
          - events.each do |event|
            tr.yearly-table-event
              td.date
                - time = Time.at(event["start_i"]).in_time_zone("America/Denver")
                strong = time.day.ordinalize
              td =< event["summary"]
  table.calendar
    - view_object[:day_groups].first(5).each_with_index do |event_day, index|
      tr.header
        td colspan="3"
          h2.date = event_day[:day_name]
          span
            i.climacon class="#{event_day[:weather_icon]}"
            => event_day[:temperature_range]
          - if event_day[:precip_probability] > 0.1
            span
              i.climacon class="#{event_day[:precip_icon]}"
              =< "#{(event_day[:precip_probability] * 100).to_i}%"
          - if index == 0
            span
              i.fa class="#{view_object[:sun_phase_icon_class]}"
              =< view_object[:sun_phase_label]
      - [event_day[:events][:all_day], event_day[:events][:periodic]].flatten.each do |event|
        tr
          td.icon width="30"
            i.fa.fa-fw class="fa-#{event['icon']}"
          td
            = event["summary"]
            p.subtitle
              - if !event["all_day"]
                = event["time"]
              - if !event["all_day"] && event["location"].present?
                ',
              - if event["location"] =~ URI::regexp
                = URI(event["location"]).host.gsub("www.", "")
              - elsif event["location"]
                = event["location"].to_s.split(",").first.truncate(32)
